// positions
.relative {position: relative}
.absolute {position: absolute}
.fixed {position: fixed}
.static {position: static}

// element on the page but not visible
.hidden {visibility: hidden}

//
.ds--none {display: none}
.ds--inline {display: inline}
.ds--inline-block {display: inline-block}

.pull-left {float: left}
.pull-right {float: right}
.clear {clear: both}

.rounded {border-radius: $spacing-half}
.circle {border-radius: 50%}

.grid {
    display: grid;
    grid-gap: $spacing-1;
    grid-template-columns: repeat(12, 1fr);	
    grid-auto-rows: minmax($spacing-5, auto);
}

$grid-map: (
    
      "1":      1,
      "2":      2,
      "3":      3,
      "4":      4,
      "5":      5,
      "6":      6,
      "7":      7,
      "8":      8,
      "9":      9,
      "10":     10,
      "11":     11,
      "12":     12
    
    ) !default;
    
    $grid-helpers: (
    
      "col":    "grid-column-end",
    
    ) !default;
    
    
    // Loop over the helpers in $helpers
    @each $alias, $property in $grid-helpers {
    
        // Loop over spacing values in $spacing-map
        @each $key, $value in $grid-map {
    
            // Create a new class
            .#{$alias}-#{$key} {
    
                #{$property}: span $value;

            }
    
        }
    
    }